apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: artifact-passing-
spec:
  entrypoint: artifact-example
  templates:
  - name: artifact-example
    steps:
    - - name: generate-artifact
        template: mirror-s3
    - - name: consume-artifact
        template: json-to-parquet

  - name: mirror-s3
    container:
      image: minio/mc
      command: ["/bin/sh", "-ce"]
      args:
        - mc --config-dir /tmp/mc config host add input $INPUT_URL $INPUT_ACCESS_KEY_ID $INPUT_SECRET_ACCESS_KEY;
          mc --config-dir /tmp/mc config host add output $OUTPUT_URL $OUTPUT_ACCESS_KEY_ID $OUTPUT_SECRET_ACCESS_KEY;
          mc --config-dir /tmp/mc mirror --overwrite input/$INPUT_PATH output/$OUTPUT_PATH > /tmp/mc_log.txt;
      resources:
        limits:
          cpu: 500m
          memory: 2Gi
        requests:
          cpu: 250m
          memory: 1Gi
      env:
        - name: INPUT_URL
          valueFrom:
            secretKeyRef:
              key: url
              name: s3-sync-secret-eggress-in
              optional: false
        - name: INPUT_PATH
          valueFrom:
            secretKeyRef:
              key: path
              name: s3-sync-secret-eggress-in
              optional: false
        - name: INPUT_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: access-key-id
              name: s3-sync-secret-eggress-in
              optional: false
        - name: INPUT_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secret-access-key
              name: s3-sync-secret-eggress-in
              optional: false
        - name: OUTPUT_URL
          valueFrom:
            secretKeyRef:
              key: url
              name: s3-sync-secret-eggress-out
              optional: false
        - name: OUTPUT_PATH
          valueFrom:
            secretKeyRef:
              key: path
              name: s3-sync-secret-eggress-out
              optional: false
        - name: OUTPUT_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: access-key-id
              name: s3-sync-secret-eggress-out
              optional: false
        - name: OUTPUT_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secret-access-key
              name: s3-sync-secret-eggress-out
              optional: false
      volumeMounts:
        - name: s3-sync-secret-eggress-in
          mountPath: "/usr/local/share/eggres_in"
        - name: s3-sync-secret-eggress-out
          mountPath: "/usr/local/share/eggres_out"
    outputs:
      parameters:
      # export a global parameter. The parameter will be programatically available in the completed
      # workflow object under: workflow.outputs.parameters
      - name: mc-log
        valueFrom:
          path: /tmp/mc_log.txt
        globalName: mc-log-global

  - name: json-to-parquet
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo {{workflow.outputs.parameters.mc-log-global}}"]
